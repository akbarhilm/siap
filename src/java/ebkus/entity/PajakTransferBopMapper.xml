<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ebkus.entity.PajakTransferBopMapper">

    <select id="getDataPajak" parameterType="java.util.Map" resultType="ebkus.model.PajakTransfer">
        select tmbkusbop.i_idsekolah as idsekolah,
        tmbkusbop.i_id as idBku,
        i_bkuno_mohon as noBkuMohon,
        C_TRX as kodeTransaksi,
        sum(v_kas_keluar) as nilaiPajak,
        E_DOC_BUKTI as uraian,
        substr(I_REKAN_NPWP,0,15) as npwpRekanan,
        substr(N_REKAN_NPWP,0,30) as namaWp,
        substr(A_REKAN_NPWP,0,50) as alamatWp,
        substr(N_KOTA_NPWP,0,30) as kotaWp,
        I_REK_BANKbop as norekBank,
        N_REK_BANKbop as namaPengirimBank,
        tmbkusbop.C_DJP_KJS as kodeJenisSetor,
        tmbkusbop.C_DJP_MAP as akunPajak,
        tmbkusbop.C_MASA_PAJAK as masaPajak,
        '-' as noSk,
        nvl(tmbkusboppotpajak.c_billing,0) as kodeBilling,
        D_BILLING_EXP as tglBillExp,
        C_BANK_BUKU as tglBuku,
        nvl(C_BPN_STATUS,'-') as statusBpn,
        I_NPSN as npsn,
        n_sekolah as namaSekolah,
        d_pay as tglBayar,
        i_ntb as ntb,
        i_ntpn as ntpn,
        c_angg_triwulan as "bku.triwulan",
        i_doc_bukti as "bku.noBukti",
        tmbkusbop.c_kegiatan || ' / '|| n_kegiatan as "bku.ketKegiatan", tmbkusbop.c_kegiatan as "bku.kodeKeg",
        i_idkegiatan as "bku.idKegiatan",
        i_pptk_nrk as "bku.nrkPptk",  i_pptk_nip as "bku.nipPptk", n_pptk as "bku.namaPptk",
        regexp_replace(trsekolah.i_npwp,'[-. /]','') as npwpSekolah,
        trsekolah.n_npwp as namaWpSekolah,
        trsekolah.A_NPWP as alamatWpSekolah, n_npwp_kota as kotaWpSekolah, c_tahun_pajak as tahunPajak,
        TRIM (TO_CHAR (tmbkusbop.i_id, '000000000000000'))  AS idApp, p_pot as persenPot
        FROM tmrkaskegiatan, trsekolah, tmbkusboprinci,
        tmbkusbop left join tmbkusboppotpajak on i_idbku = tmbkusbop.i_id
        where trsekolah.i_id = tmbkusbop.i_idsekolah
        and tmbkusbop.i_id = tmbkusboprinci.i_idbkubop
        and tmrkaskegiatan.i_id = tmbkusbop.i_idkegiatan
        and tmbkusbop.i_idsekolah = #{idsekolah}
        and tmbkusbop.c_angg_tahun = #{tahun}
        and tmbkusbop.i_id = #{idbku}
        and c_trx =  #{kodetrx}
        and v_kas_keluar > 0
        group by tmbkusbop.i_idsekolah, i_bkuno_mohon,
        C_TRX, E_DOC_BUKTI, substr(I_REKAN_NPWP,0,15),
        substr(N_REKAN_NPWP,0,30), substr(A_REKAN_NPWP,0,50), substr(N_KOTA_NPWP,0,30),
        I_REK_BANKbop, N_REK_BANKbop, tmbkusbop.C_DJP_KJS,
        tmbkusbop.C_DJP_MAP, tmbkusbop.C_MASA_PAJAK, tmbkusboppotpajak.c_billing,
        D_BILLING_EXP, C_BANK_BUKU, C_BPN_STATUS, I_NPSN, n_sekolah,
        d_pay, i_ntb, i_ntpn, tmbkusbop.i_id, c_angg_triwulan, i_doc_bukti,
        tmbkusbop.c_kegiatan || ' / '|| n_kegiatan, i_idkegiatan, i_pptk_nrk, i_pptk_nip, n_pptk,
        tmbkusbop.c_kegiatan, trsekolah.i_npwp, trsekolah.n_npwp,
        trsekolah.A_NPWP, n_npwp_kota, c_tahun_pajak, p_pot

    </select>

    <select id="getListBkuRinci" parameterType="java.util.Map"  resultType="ebkus.model.BkuRinci">

        SELECT idBas, kodeakun, namaakun, idKomponen, namaKomponen, nilaiKeluar, kodeKomponen,
        idBkuRinci, nilaiPajakSpj, nilaiNettoSpj, idBlRinci, namaSubKegiatan, keteranganRinci
        FROM   (SELECT   ROWNUM AS rn, a.*  FROM   (
        select tmbkusboprinci.i_idbas as idBas, tmbkusboprinci.c_akun as kodeakun, n_akun as namaakun,
        i_idkomponen as idKomponen, n_komponen as namaKomponen, v_kas_keluar as nilaiKeluar,c_komponen as kodeKomponen,
        tmbkusboprinci.i_id as idBkuRinci, v_spj_pajak as nilaiPajakSpj, v_spj_netto as nilaiNettoSpj,
        i_idblrinci as idBlRinci, n_kegiatan_sub as namaSubKegiatan, e_angg_rinci as keteranganRinci
        from tmbkusboprinci, trbas, trkategorikomponen
        where tmbkusboprinci.i_idbas =  trbas.i_id
        and tmbkusboprinci.i_idkomponen = trkategorikomponen.i_id
        and i_idbkubop = #{idbku}
        ) a) WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}

    </select>

    <select id="getBanyakListBkuRinci" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak  FROM (
        select tmbkusboprinci.i_idbas as idBas, tmbkusboprinci.c_akun as kodeakun, n_akun as namaakun,
        i_idkomponen as idKomponen, n_komponen as namaKomponen, v_kas_keluar as nilaiKeluar
        from tmbkusboprinci, trbas, trkategorikomponen
        where tmbkusboprinci.i_idbas =  trbas.i_id
        and tmbkusboprinci.i_idkomponen = trkategorikomponen.i_id
        and i_idbkubop = #{idbku}
        )
    </select>

    <select id="getBkuNo" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT   NVL (MAX (i_bkuno), 0) + 1 AS nobku
        FROM   TMBKUSbop
        WHERE   c_angg_tahun = #{tahun}
        AND i_idsekolah = #{idsekolah}

    </select>

    <update id="updateBkuById" parameterType="ebkus.model.BukuKasUmum"   >
        UPDATE TMBKUSbop
        SET
        D_POSTING = #{tglPosting},
        I_BKUNO = #{noBKU},
        C_BKU_TUTUP = 1,
        I_PGUN_UBAH = #{idEntry},
        D_PGUN_UBAH = sysdate
        WHERE I_ID = #{idBku}
        AND C_ANGG_TAHUN = #{tahun}

    </update>

    <select id="getDataSekolah" parameterType="java.util.Map" resultType="ebkus.model.BkuTransfer">
        select i_rek_bankbop as  norekPengirim, n_rek_bankbop as namaPengirim, c_wil as wilayah,
        i_npwp as npwp, n_npwp as namaWp, A_NPWP as alamatWp, n_npwp_kota as kotaWp
        from trsekolah where i_id = #{idsekolah}

    </select>

    <select id="getSaldoKas" parameterType="java.util.Map" resultType="ebkus.model.BukuKasUmum">
        select sum(jo-jj-st) as saldoKas from (
        select nvl(sum(v_kas_terima-v_kas_keluar),0) as jo, 0 as jj, 0 as st
        from tmbkusbop, tmbkusboprinci
        where tmbkusbop.i_id = tmbkusboprinci.i_idbkubop
        and c_angg_tahun = #{tahun}
        and i_idsekolah = #{idsekolah}
        and c_trx = 'JO'
        and c_angg_triwulan = #{triwulan}

        union all
        select 0 as jo, nvl(sum(v_kas_keluar),0) as jj, 0 as st
        from tmbkusbop, tmbkusboprinci
        where tmbkusbop.i_id = tmbkusboprinci.i_idbkubop
        and c_angg_tahun = #{tahun}
        and i_idsekolah = #{idsekolah}
        and c_trx = 'JJ'
        and d_posting is not null
        and c_angg_triwulan = #{triwulan}

        union all
        select 0 as jo, 0 as jj, nvl(sum(v_kas_keluar),0) as st
        from tmbkusbop, tmbkusboprinci
        where tmbkusbop.i_id = tmbkusboprinci.i_idbkubop
        and c_angg_tahun = #{tahun}
        and i_idsekolah = #{idsekolah}
        and c_trx = 'ST'
        and d_posting is not null
        and c_angg_triwulan = #{triwulan}
        )
    </select>


    <insert id="insertBkuBankError" parameterType="ebkus.model.BkuTransfer" >
        INSERT INTO TMBKUSBANKERROR (
        I_ID,
        C_ANGG_TAHUN,
        I_IDBKU,
        I_BIT11,
        I_IDSEKOLAH,
        C_ANGG_SUMBDANA,
        E_ERROR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )VALUES(
        #{id},
        #{tahun},
        #{idBku},
        #{bit11},
        #{idsekolah},
        #{kodeSumbdana},
        substr(#{pesanError},0,500),
        #{idEntry},
        sysdate
        )
    </insert>

    <update id="updateRinciPotPajak" parameterType="ebkus.model.PajakTransfer"   >
        UPDATE TMBKUSbopPOTPAJAK SET

        <if test="kodeRequest == 1"> -- create kode billing
            I_BULKIDREQUEST = #{bulkIdRequest},
            I_IDREQUEST = #{idRequest},
            C_BILLING = #{kodeBilling},
            <if test="tglBillExpString != null and tglBillExpString != '' ">
                D_BILLING_EXP = TO_DATE(#{tglBillExpString}, 'YYYYMMDDHH24MISS'),
            </if>
        </if>

        <if test="kodeRequest == 2"> -- billing
            I_BULKIDREQUEST = #{bulkIdRequest},
            I_IDREQUEST = #{idRequest},
            C_BANK_BUKU = #{tglBuku},
            C_BPN_STATUS = #{statusBpn},
            I_NTB = #{ntb},
            I_NTPN = #{ntpn},
            C_MASA_PAJAK = #{masaPajak},
            C_STAN = #{kodeStan},
            <if test="tglBayarString != null and tglBayarString != '' ">
                D_PAY = TO_DATE(#{tglBayarString}, 'YYYYMMDDHH24MISS'),
            </if>

        </if>

        <if test="kodeRequest == 3"> -- reinquiry
            C_BANK_BUKU = #{tglBuku},
            C_BPN_STATUS = #{statusBpn},
            I_NTB = #{ntb},
            I_NTPN = #{ntpn},
            C_MASA_PAJAK = #{masaPajak},
            C_STAN = #{kodeStan},
            <if test="tglBayarString != null and tglBayarString != '' ">
                D_PAY = TO_DATE(#{tglBayarString}, 'YYYYMMDDHH24MISS'),
            </if>

        </if>

        D_PGUN_UBAH = sysdate,
        I_PGUN_UBAH = #{idEntry}
        where
        I_IDBKU = #{idBku}

    </update>

    <insert id="insertRinciPotPajak" parameterType="ebkus.model.PajakTransfer" >
        INSERT INTO TMBKUSbopPOTPAJAK (
        I_ID,
        I_IDBKU,
        I_BULKIDREQUEST,
        I_IDREQUEST,
        C_BILLING,
        <if test="tglBillExpString != null and tglBillExpString != '' ">
            D_BILLING_EXP,
        </if>
        C_DJP_KJS,
        C_DJP_MAP,
        D_PGUN_REKAM,
        I_PGUN_REKAM
        )VALUES(
        #{id},
        #{idBku},
        #{bulkIdRequest},
        #{idRequest},
        #{kodeBilling},
        <if test="tglBillExpString != null and tglBillExpString != '' ">
            TO_DATE(#{tglBillExpString}, 'YYYYMMDDHH24MISS'),
        </if>
        #{kodeJenisSetor},
        #{akunPajak},
        sysdate,
        #{idEntry}
        )
    </insert>

    <update id="updateInquiryMasterPot" parameterType="ebkus.model.PajakTransfer"   >
        UPDATE TMBKUSBOP SET
        i_rekan_npwp = #{npwpRekanan},
        n_rekan_npwp = #{namaWp},
        a_rekan_npwp = #{alamatWp},
        D_PGUN_UBAH = sysdate,
        I_PGUN_UBAH = #{idEntry}
        where
        I_ID = #{idBku}
    </update>
    <update id="updateInquiryPot" parameterType="ebkus.model.PajakTransfer"   >
        UPDATE TMBKUSbopPOTPAJAK SET
        v_pajak = #{nilaiPajak},
        c_billing = #{kodeBilling},
        D_PGUN_UBAH = sysdate,
        I_PGUN_UBAH = #{idEntry}
        where
        I_IDBKU = #{idBku}
    </update>
    <update id="updateCetakCount" parameterType="java.util.Map"   >
        UPDATE TMBKUSbopPOTPAJAK SET
        Q_POT_CETAK = Q_POT_CETAK + 1
        where
        I_IDBKU = #{idbku}
    </update>
</mapper>
